---
import '@fontsource-variable/plus-jakarta-sans'
import Header from '@/components/Header.astro'
import Footer from '@/components/Footer.astro'

interface Props {
  title: string
  description: string
}

const { title, description } = Astro.props
---

<!doctype html>
<html lang="en" class="dark">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/code.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body class="bg-gray-200 dark:bg-[#001219]">
    <div class="absolute z-[-1] h-[700px] w-full flex justify-center">
      <div class="relative h-full w-full max-w-screen-xl py-24 ransform-gpu blur-3xl">
        <div id="polygon" class="h-full w-full bg-gradient-to-r from-[rgba(0,96,115)]  to-white/10 dark:bg-gradient-to-r dark:from-[rgba(233,216,166,.9)] dark:to-white/10  opacity-70 lg:opacity-40 transition-all duration-[3s]"
        ></div>
      </div>
    </div>
    <div class="absolute z-[-2] h-full w-full overflow-hidden">
      <div class="relative h-full w-full">
        <div class="absolute top-0 h-screen right-0 left-0 bg-gray-200 dark:bg-[#001219] dark:bg-[radial-gradient(ellipse_80%_80%_at_50%_-20%,rgba(233,216,166,.15),rgba(255,255,255,0))] bg-[radial-gradient(ellipse_80%_80%_at_50%_-20%,rgba(0,95,115,.25),rgba(255,255,255,0))]"></div>
      </div>
    </div>
    <Header />
    <slot />
    <Footer />
  </body>
</html>
<style is:global>
  * {
    transition: all 500ms ease;
  }
  html {
    font-family: 'Plus Jakarta Sans Variable', sans-serif, system-ui;
    scroll-behavior: smooth;
    scrollbar-width: thin;
    scrollbar-color: #717171 #42424273;
  }
  #polygon {
    clip-path: polygon(21.32% 54.14%, 87.36% 37.65%, 27.95% 10.22%, 88.09% 99.54%, 60.22% 61.00%, 61.07% 54.13%, 79.23% 54.25%, 24.43% 3.61%, 2.40% 41.28%, 89.56% 20.92%, 78.91% 11.92%, 89.82% 57.05%, 60.57% 41.73%, 31.84% 30.54%, 22.56% 43.92%, 27.47% 48.21%);
  }
</style>
<script is:inline>
  const polygon = document.getElementById('polygon')
  function generarClipPath() {
    const points = Array.from({ length: 16 }, () => {
      const x = (Math.random() * 100).toFixed(2);
      const y = (Math.random() * 100).toFixed(2);
      return `${x}% ${y}%`;
    });
    return `polygon(${points.join(", ")})`;
  }
  setInterval(() => {
    polygon.style.clipPath = generarClipPath();
  }, 3000);
</script>
