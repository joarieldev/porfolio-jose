<button id="btn-toggle" onclick="changeTheme()" class="mx-2 hover:scale-110 transition size-6 text-gray-800 dark:text-gray-200 theme-toggle--toggled">
  <svg
    xmlns="http://www.w3.org/2000/svg"
    aria-hidden="true"
    width="24"
    height="24"
    fill="currentColor"
    class="theme-toggle__expand"
    viewBox="0 0 32 32"
  >
    <clipPath id="maintheme-toggle__expand__cutout">
      <path d="M0-11h25a1 1 0 0017 13v30H0Z"></path>
    </clipPath>
    <g clip-path="url(#maintheme-toggle__expand__cutout)">
      <circle cx="16" cy="16" r="8.4"></circle>
      <path
        d="M18.3 3.2c0 1.3-1 2.3-2.3 2.3s-2.3-1-2.3-2.3S14.7.9 16 .9s2.3 1 2.3 2.3zm-4.6 25.6c0-1.3 1-2.3 2.3-2.3s2.3 1 2.3 2.3-1 2.3-2.3 2.3-2.3-1-2.3-2.3zm15.1-10.5c-1.3 0-2.3-1-2.3-2.3s1-2.3 2.3-2.3 2.3 1 2.3 2.3-1 2.3-2.3 2.3zM3.2 13.7c1.3 0 2.3 1 2.3 2.3s-1 2.3-2.3 2.3S.9 17.3.9 16s1-2.3 2.3-2.3zm5.8-7C9 7.9 7.9 9 6.7 9S4.4 8 4.4 6.7s1-2.3 2.3-2.3S9 5.4 9 6.7zm16.3 21c-1.3 0-2.3-1-2.3-2.3s1-2.3 2.3-2.3 2.3 1 2.3 2.3-1 2.3-2.3 2.3zm2.4-21c0 1.3-1 2.3-2.3 2.3S23 7.9 23 6.7s1-2.3 2.3-2.3 2.4 1 2.4 2.3zM6.7 23C8 23 9 24 9 25.3s-1 2.3-2.3 2.3-2.3-1-2.3-2.3 1-2.3 2.3-2.3z"
      ></path>
    </g>
  </svg>
</button>

<style>
  :root {
    --toggle-duration: 800ms;
  }
  .theme-toggle__expand g circle,
  .theme-toggle__expand g path {
    transform-origin: center;
    transition: transform calc(var(--toggle-duration) * 0.65)
      cubic-bezier(0, 0, 0, 1.25)
      calc(var(--toggle-duration) * 0.35);
  }
  .theme-toggle__expand :first-child path {
    transition-property: transform, d;
    transition-duration: calc(var(--toggle-duration) * 0.6);
    transition-timing-function: cubic-bezier(0, 0, 0.5, 1);
  }
  .theme-toggle--toggled .theme-toggle__expand g circle {
    transform: scale(1.4);
    transition-delay: 0s;
  }
  .theme-toggle--toggled .theme-toggle__expand g path {
    transform: scale(0.75);
    transition-delay: 0s;
  }
  .theme-toggle--toggled .theme-toggle__expand :first-child path {
    d: path("M-9 3h25a1 1 0 0017 13v30H0Z");
    transition-delay: calc(var(--toggle-duration) * 0.4);
    transition-timing-function: cubic-bezier(0, 0, 0, 1.25);
  }
</style>

<script is:inline>
  let globalTheme = 'dark'

  const changeTheme = () => {
    const theme = getTheme()
    if (theme === 'dark') {
      updateTheme('light')
      globalTheme = 'light'
    }
    if (theme === 'light') {
      updateTheme('dark') 
      globalTheme = 'dark'
    }
  }
  const getTheme = () => {
    const themeStorage = localStorage.getItem('theme')
    if ( themeStorage !== 'undefined' && themeStorage !== null ) {
      return localStorage.getItem('theme')
    }
    return window.matchMedia('(prefers-color-scheme: dark)').matches
      ? 'dark'
      : 'light'
  }
  const trasiton = () => {
    const style = document.createElement('style')
    style.innerHTML = `
      * {
        transition: all 500ms ease;
      }
    `
    document.head.appendChild(style)
    setTimeout(() => {
      document.head.removeChild(style)
    }, 1500);
  }
  const updateTheme = (theme) => {
    trasiton()
    localStorage.setItem('theme', theme)
    if(theme === 'dark') {
      document.documentElement.classList.add('dark')
      document.getElementById('btn-toggle').classList.add('theme-toggle--toggled')
    }
    if(theme === 'light') { 
      document.documentElement.classList.remove('dark')
      document.getElementById('btn-toggle').classList.remove('theme-toggle--toggled')
    }
  }
  document.addEventListener('DOMContentLoaded', () => {
    const theme = getTheme()
    updateTheme(theme)
    globalTheme = theme
  })
</script>
