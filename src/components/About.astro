---
const mainSkills = [
  {
    name: 'JavaScript',
    description: 'javascript logo',
    image: '/JavaScript.svg',
  },
  {
    name: 'HTML',
    description: 'html logo',
    image: '/HTML.svg',
  },
  {
    name: 'CSS',
    description: 'css logo',
    image: '/CSS.svg',
  },
  
  {
    name: 'React',
    description: 'react logo',
    image: '/React.svg',
  },
  
  {
    name: 'Git',
    description: 'git logo',
    image: '/Git.svg',
  },
  {
    name: 'TypeScript',
    description: 'typescript logo',
    image: '/TypeScript.svg',
  },
  {
    name: 'Next.js',
    description: 'nextjs logo',
    image: '/Nextjs.svg',
    color: 'gray',
  }
]

const knowledge = [
  {
    name: 'Node.js',
    description: 'nodejs logo',
    image: '/Nodejs.svg',
  },
  {
    name: 'TailwindCSS',
    description: 'tailwindcss logo',
    image: '/TailwindCSS.svg',
  },
  {
    name: 'Bootstrap',
    description: 'bootstrap logo',
    image: '/Bootstrap.svg',
  },
  {
    name: 'Express.js',
    description: 'expressjs logo',
    image: '/Expressjs.svg',
  },
  {
    name: 'MongoDB',
    description: 'mongodb logo',
    image: '/MongoDB.svg',
  },
  {
    name: 'MySQL',
    description: 'mysql logo',
    image: '/MySQL.svg',
    color: '#3d86a183',
  },
  {
    name: 'Docker',
    description: 'docker logo',
    image: '/Docker.svg',
  },
  {
    name: 'Firebase',
    description: 'firebase logo',
    image: '/Firebase.svg',
  },
  {
    name: 'Angular',
    description: 'angular logo',
    image: '/Angular.svg',
  },
  {
    name: 'Java',
    description: 'java logo',
    image: '/Java.svg',
    color: '#f9a4427e',
  }
]
---
<article class="flex">
  <div class="text-base max-sm:text-sm">
    <p class="mb-3 text-gray-800 dark:text-gray-200 text-pretty">
      Me llamo José Ariel Martínez soy desarrollador Frontend, casi <strong class="text-[#0a9396] dark:text-[#f57d02]">siempre motivado por explorar las infinatas posibilidades del desarrollo web</strong> y cómo hacer que las ideas cobren vida, tambien cuento con conocimientos en <strong class="text-[#0a9396] dark:text-[#f57d02]">Backend</strong>.
    </p>
    <p class="mb-3 text-gray-800 dark:text-gray-200 text-pretty">
      Mi objetivo es seguir especializándome en <strong class="text-[#0a9396] dark:text-[#f57d02]">crear interfaces atractivas y fáciles de usar</strong> y aplicar las mejores prácticas en el desarrollo web.
    </p>
  </div>
</article>
<article class="flex flex-col items-center mt-7">
  <h3 class="text-xl text-gray-800 dark:text-gray-200 my-3 max-sm:text-lg underline decoration-wavy underline-offset-2 dark:decoration-gray-200/80 decoration-gray-800/60">
    Habilidades principales
  </h3>
  <div class="flex flex-wrap justify-center gap-4 p-2 w-full sm:max-w-screen-sm max-sm:gap-2">
    {
      mainSkills.map((item) => (
        <div class="flex flex-col gap-1 items-center p-1 transition duration-300 cursor-default">
          <div class="flex relative blink">
            <span style={{backgroundImage: `url(${item.image})`, background: `${item.color}`}} class="bg-cover bg-center blur-md saturate-50 dark:saturate-200 dark:scale-125 absolute inset-0 z-[-1]" />
            <img src={item.image} alt={item.description} class="size-6 max-sm:size-5" />
          </div>
          <h4 class="text-gray-900 dark:text-gray-100 text-base font-light max-sm:text-sm">
            {item.name}
          </h4>
        </div>
      ))
    }
  </div>
  <h2 class="text-xl text-gray-800 dark:text-gray-200 my-3 max-sm:text-lg underline decoration-wavy underline-offset-2 dark:decoration-gray-200/80 decoration-gray-800/60">
    Conocimientos en
  </h2>
  <div class="flex flex-wrap justify-center gap-4 p-2 w-full sm:max-w-screen-sm max-sm:gap-2">
    {
      knowledge.map((item) => (
        <div class="flex flex-col gap-1 items-center p-1 transition duration-300 cursor-default">
          <div class="flex relative blink">
            <span style={{backgroundImage: `url(${item.image})`, background: `${item.color}`}} class="bg-cover bg-center blur-md saturate-50 dark:saturate-200 dark:scale-125 absolute inset-0 z-[-1]" />
            <img src={item.image} alt={item.description} class="size-6 max-sm:size-5" />
          </div>
          <h4 class="text-gray-900 dark:text-gray-100 text-base font-light max-sm:text-sm">
            {item.name}
          </h4>
        </div>
      ))
    }
  </div>
</article>

<style>
  :root {
    --brightness: brightness(80%)
  }

  html.dark {
    --brightness: brightness(50%)
  }

  .anim-blink-0 {
    span {
      animation: blink-0-span 5s;
    }
    img {
      animation: blink-0-img 5s;
    }
  }
  @keyframes blink-0-span {
    55% { opacity: 1;}
    0%,19%,21%,23%,25%,54%,56%,100% { opacity: 0;}
  }
  @keyframes blink-0-img {
    55% { filter: grayscale(0%) brightness(100%);}
    0%,19%,21%,23%,25%,54%,56%,100% { filter: grayscale(100%) var(--brightness);}
  }

  .anim-blink-1 {
    span {
      animation: blink-1-span 5s;
    }
    img {
      animation: blink-1-img 5s;
    }
  }
  @keyframes blink-1-span {
    20%,24% { opacity: 0;}
    0%,19%,21%,23%,25%,54%,56%,100% { opacity: 1;}
  }
  @keyframes blink-1-img {
    20%,24% { filter: grayscale(100%) var(--brightness);}
    0%,19%,21%,23%,25%,54%,56%,100% { filter: grayscale(0%) brightness(100%);}
  }

  .anim-blink-2 {
    span {
      animation: blink-1-span 5s;
    }
    img {
      animation: blink-1-img 5s;
    }
  }
  @keyframes blink-2-span {
    20%,24%,55% { opacity: 0;}
    0%,19%,21%,23%,25%,54%,56%,100% { opacity: 1;}
  }
  @keyframes blink-2-img {
    20%,24%,55% { filter: grayscale(100%) var(--brightness);}
    0%,19%,21%,23%,25%,54%,56%,100% { filter: grayscale(0%) brightness(100%);}
  }
</style>

<script>
  const blinks = document.querySelectorAll(".blink")

  function generarBlink() {
    const select = Math.floor(Math.random() * blinks.length)
    const selectBlink = Math.floor(Math.random() * 3)
    const element = blinks[select];

    if (element.classList.contains("anim-blink-0") || 
        element.classList.contains("anim-blink-1") || 
        element.classList.contains("anim-blink-2")) {
      return
    }

    element.classList.add(`anim-blink-${selectBlink}`);
    setTimeout(()=>{
        element.classList.remove(`anim-blink-${selectBlink}`)
      },5000)    
    }

  setInterval(() => {
    const repetir = Math.ceil(Math.random() * blinks.length / 2)
    for (let i = 0; i < repetir; i++) {
      generarBlink()
    }
  }, 6000)
</script>